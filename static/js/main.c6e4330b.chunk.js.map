{"version":3,"sources":["CryptoContext.js","components/Header.js","config/api.js","components/Banner/Carousel.js","components/Banner/Banner.js","components/CoinsTable.js","pages/Homepage.js","config/data.js","components/SelectButton.js","components/CoinInfo.js","pages/Coinpage.js","App.js","index.js"],"names":["Crypto","createContext","CryptoContext","children","useState","currency","setCurrency","symbol","setSymbol","useEffect","Provider","value","CryptoState","useContext","useStyles","makeStyles","title","flex","color","fontFamily","fontWeight","cursor","Header","classes","history","useNavigate","darkTheme","createTheme","palette","primary","main","type","ThemeProvider","theme","AppBar","position","Container","Toolbar","Typography","onClick","className","variant","Select","style","width","height","marginRight","onChange","e","target","MenuItem","CoinList","SingleCoin","id","HistoricalChart","days","TrendingCoins","carousel","display","alignItems","carouselItem","flexDirection","textTransform","numberWithCommas","x","toString","replace","Carousel","trending","setTrending","fetchTrendingCoins","a","axios","get","data","items","map","coin","profit","price_change_percentage_24h","to","src","image","alt","name","marginBottom","toFixed","fontSize","current_price","mouseTracking","infinite","autoPlayInterval","animationDuration","disableDotsControls","disableButtonsControls","responsive","autoPlay","banner","backgroundImage","bannerContent","paddingTop","justifyContent","tagline","textAlign","Banner","CoinsTable","coins","setCoins","loading","setLoading","search","setSearch","page","setPage","fetchCoins","handleSearch","filter","toLowerCase","includes","row","backgroundColor","pagination","margin","TextField","label","borderRadius","TableContainer","LinearProgress","Table","TableHead","TableRow","head","TableCell","align","TableBody","slice","component","scope","gap","market_cap","Pagination","count","length","padding","ul","_","window","scroll","Homepage","chartDays","SelectButton","selected","selectbutton","border","paddingLeft","paddingRight","onSelect","CoinInfo","historicData","setHistoricData","setDays","fetchHistoricData","prices","container","marginTop","breakpoints","down","labels","date","Date","time","getHours","getMinutes","toLocaleDateString","datasets","borderColor","options","elements","point","radius","CircularProgress","size","thickness","day","Coinpage","useParams","setCoin","fetchCoin","sidebar","borderRight","heading","description","paddingBottom","marketData","alignSelf","large","ReactHtmlParser","en","split","market_cap_rank","market_data","App","minHeight","path","element","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c6e4330b.chunk.js","sourcesContent":["import { React, createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst Crypto = createContext();\r\n\r\nconst CryptoContext = ({ children }) => {\r\n    \r\n    const [currency, setCurrency] = useState(\"SGD\");\r\n    const [symbol, setSymbol] = useState(\"USD$\");\r\n\r\n    useEffect(() => {\r\n        if (currency === \"SGD\") setSymbol(\"S$\");\r\n        else if (currency === \"USD\") setSymbol(\"USD$\");\r\n    }, [currency]);\r\n\r\n    return (\r\n        <Crypto.Provider value={{currency, symbol, setCurrency}}>\r\n            {children}\r\n        </Crypto.Provider>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default CryptoContext;\r\n\r\nexport const CryptoState = () => {\r\n    return useContext(Crypto);\r\n}","import { AppBar, Container, createTheme, makeStyles, MenuItem, Select, Toolbar, Typography, ThemeProvider } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { CryptoState } from '../CryptoContext';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    title: {\r\n        flex: 1,\r\n        color: \"gold\",\r\n        fontFamily: \"Montserrat\",\r\n        fontWeight: \"bold\",\r\n        cursor: \"pointer\"\r\n    }\r\n}));\r\n\r\nconst Header = () => {\r\n    const classes = useStyles();\r\n    const history = useNavigate();\r\n\r\n    const { currency, setCurrency } = CryptoState()\r\n\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            primary: {\r\n                main: \"#fff\"\r\n            },\r\n            type: \"dark\"\r\n        }\r\n    });\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <AppBar color='transparent' position='static'>\r\n                <Container>\r\n                    <Toolbar>\r\n                        <Typography \r\n                            onClick={() => history(\"/crypto-tracker/\")} \r\n                            className={classes.title}\r\n                            variant=\"h6\"\r\n                        >\r\n                            Crypto Tracker\r\n                        </Typography>\r\n\r\n                        <Select \r\n                            variant=\"outlined\" \r\n                            style={{\r\n                                width: 100,\r\n                                height: 40,\r\n                                marginRight: 15,\r\n                                color: \"white\"\r\n                            }}\r\n                            value={currency}\r\n                            onChange={(e) => setCurrency(e.target.value)}\r\n                        >\r\n                            <MenuItem value={\"USD\"}>USD</MenuItem>\r\n                            <MenuItem value={\"SGD\"}>SGD</MenuItem>\r\n                        </Select>\r\n                    </Toolbar>\r\n                </Container>\r\n            </AppBar>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default Header","export const CoinList = (currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=market_cap_desc&per_page=100&page=1&sparkline=false`;\r\n\r\nexport const SingleCoin = (id) =>\r\n  `https://api.coingecko.com/api/v3/coins/${id}`;\r\n\r\nexport const HistoricalChart = (id, days = 365, currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/${id}/market_chart?vs_currency=${currency}&days=${days}`;\r\n\r\nexport const TrendingCoins = (currency) =>\r\n  `https://api.coingecko.com/api/v3/coins/markets?vs_currency=${currency}&order=gecko_desc&per_page=10&page=1&sparkline=false&price_change_percentage=24h`;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport { TrendingCoins } from '../../config/api';\r\nimport { CryptoState } from '../../CryptoContext';\r\nimport AliceCarousel from 'react-alice-carousel';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    carousel: {\r\n        height: \"50%\",\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    carouselItem: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        cursor: \"pointer\",\r\n        textTransform: \"uppercase\",\r\n        color: \"white\"\r\n    }\r\n}))\r\n\r\nexport function numberWithCommas(x) {\r\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n}\r\n\r\nconst Carousel = () => {\r\n    const [trending, setTrending] = useState([]);\r\n    \r\n    const classes = useStyles();\r\n\r\n    const { currency, symbol } = CryptoState();\r\n    \r\n    const fetchTrendingCoins = async () => {\r\n        const { data } = await axios.get(TrendingCoins(currency))\r\n\r\n        setTrending(data);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        fetchTrendingCoins();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currency]);\r\n\r\n    const items = trending.map((coin) => {\r\n        let profit = coin.price_change_percentage_24h >= 0;\r\n\r\n\r\n        return (\r\n            <Link className={classes.carouselItem} to={`/crypto-tracker/coins/${coin.id}`}>\r\n                <img\r\n                    src={coin?.image}\r\n                    alt={coin.name}\r\n                    height=\"80\"\r\n                    style={{ marginBottom: 10}}\r\n                />\r\n                <span>\r\n                    {coin?.symbol}\r\n                        &nbsp;\r\n                        <span\r\n                            style={{\r\n                                color: profit > 0 ? \"rgb(14, 203, 129\" : \"red\",\r\n                                fontWeight: 500\r\n                            }}\r\n                        >\r\n                            {profit && \"+\"} {coin?.price_change_percentage_24h?.toFixed(2)}%\r\n                        </span>\r\n                </span>\r\n\r\n                <span style={{ fontSize: 22, fontWeight: 500}}>\r\n                    {symbol} {numberWithCommas(coin?.current_price.toFixed(2))}\r\n                </span>\r\n            </Link>\r\n        )\r\n    })\r\n\r\n    const responsive = {\r\n        0: {\r\n            items: 2\r\n        },\r\n        512: {\r\n            items: 4\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.carousel}>\r\n            <AliceCarousel \r\n                mouseTracking\r\n                infinite\r\n                autoPlayInterval={1000}\r\n                animationDuration={1500}\r\n                disableDotsControls\r\n                disableButtonsControls\r\n                responsive={responsive}\r\n                autoPlay\r\n                items={items}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Carousel\r\n","import { Container, makeStyles, Typography } from '@material-ui/core';\r\nimport React from 'react';\r\nimport Carousel from './Carousel';\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    banner: {\r\n        backgroundImage: \"url(./banner2.jpg)\"\r\n    },\r\n    bannerContent: {\r\n        height: 400,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        paddingTop: 25,\r\n        justifyContent: \"space-around\"\r\n    },\r\n    tagline: {\r\n        display: \"flex\",\r\n        height: \"40%\",\r\n        flexDirection: \"column\",\r\n        justifyContent: \"center\",\r\n        textAlign: \"center\"\r\n    }\r\n}))\r\n\r\nconst Banner = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.banner}>\r\n            <Container className={classes.bannerContent}>\r\n                <div className={classes.tagline}>\r\n                    <Typography\r\n                        variant = \"h2\"\r\n                        style={{\r\n                            fontWeight: \"bold\",\r\n                            marginBottom: 15,\r\n                            fontFamily: \"Montserrat\"\r\n                        }}\r\n                    >\r\n                        Crypto Tracker\r\n                    </Typography>\r\n                    <Typography\r\n                        variant = \"subtitle2\"\r\n                        style={{\r\n                            color: \"darkgrey\",\r\n                            textTransform: \"capitalize\",\r\n                            fontFamily: \"Montserrat\"\r\n                        }}\r\n                    >\r\n                        Track your favorite Crypto Currency Prices!\r\n                    </Typography>\r\n                </div>\r\n                \r\n                <Carousel />\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner","import { Container, createTheme, LinearProgress, makeStyles, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TextField, ThemeProvider, Typography } from '@material-ui/core';\r\nimport { Pagination } from '@material-ui/lab';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useNavigate } from 'react-router';\r\nimport { CoinList } from '../config/api';\r\nimport { CryptoState } from '../CryptoContext';\r\nimport { numberWithCommas } from './Banner/Carousel';\r\n\r\n\r\nconst CoinsTable = () => {\r\n    const [coins, setCoins] = useState([]);\r\n    const [loading, setLoading] = useState(false);\r\n    const [search, setSearch] = useState(\"\");\r\n    const [page, setPage] = useState(1);\r\n    \r\n    const history = useNavigate();\r\n\r\n    const { currency, symbol } = CryptoState();\r\n\r\n    const fetchCoins = async () => {\r\n        setLoading(true);\r\n        const { data } = await axios.get(CoinList(currency));\r\n        \r\n        setCoins(data);\r\n        \r\n        setLoading(false);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchCoins();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currency]);\r\n\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            main: \"#fff\"\r\n        },\r\n        type: \"dark\",\r\n    })\r\n\r\n    const handleSearch = () => {\r\n        return coins.filter(\r\n            (coin) => \r\n                coin.name.toLowerCase().includes(search) || coin.symbol.toLowerCase().includes(search)\r\n        )\r\n    };\r\n\r\n    const useStyles = makeStyles(() => ({\r\n        row: {\r\n            backgroundColor: \"#16171a\",\r\n            cursor: \"pointer\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#131111\",\r\n            },\r\n            fontFamily: \"Montserrat\",\r\n        },\r\n        pagination: {\r\n            \"& .MuiPaginationItem-root\": {\r\n                color: \"gold\",\r\n            }\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <Container style={{textAlign: \"center\"}}>\r\n                <Typography\r\n                    variant=\"h4\"\r\n                    style={{margin: 18, fontFamily: \"Montserrat\"}}\r\n                >\r\n                    Cryptocurrency by Market Cap\r\n                </Typography>\r\n\r\n                <TextField \r\n                    label=\"Search for a coin\" \r\n                    variant=\"outlined\"\r\n                    style={{ marginBottom: 20, width: \"100%\", backgroundColor: \"white\", borderRadius: \"10px\" }}\r\n                    color= \"primary\"\r\n                    onChange={(e) => {setSearch(e.target.value)}}\r\n                />\r\n\r\n                <TableContainer>\r\n                    {\r\n                        loading ? (\r\n                            <LinearProgress style={{ backgroundColor: \"gold\"}} />\r\n                        ) : (\r\n                            <Table>\r\n                                <TableHead style={{ backgroundColor: \"#EEBC1D\"}}>\r\n                                    <TableRow>\r\n                                        {[\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) => (\r\n                                            <TableCell\r\n                                                style={{\r\n                                                    color: \"black\",\r\n                                                    fontWeight: \"700\",\r\n                                                    fontFamily: \"Montserrat\",\r\n                                                }}\r\n                                                key={head}\r\n                                                align={head === \"Coin\" ? \"left\" : \"right\"}\r\n                                            >\r\n                                                {head}\r\n                                            </TableCell>\r\n                                        ))}\r\n                                    </TableRow>\r\n                                </TableHead>\r\n\r\n                                <TableBody>\r\n                                    {handleSearch().slice((page - 1) * 10, (page - 1) * 10 + 10).map((row) => {\r\n                                        \r\n                                        const profit = row.price_change_percentage_24h > 0;\r\n                                        \r\n                                        return (\r\n                                            <TableRow\r\n                                                onClick={() => {history(`/crypto-tracker/coins/${row.id}`)}}\r\n                                                className={classes.row}\r\n                                                key={row.name}\r\n                                            >\r\n                                                <TableCell\r\n                                                    component=\"th\"\r\n                                                    scope=\"row\"\r\n                                                    style={{\r\n                                                        display: \"flex\",\r\n                                                        gap: 15,\r\n                                                    }}\r\n                                                >\r\n                                                    <img \r\n                                                        src={row?.image}\r\n                                                        alt={row.name}\r\n                                                        height= \"50\"\r\n                                                        style= {{ marginBottom: 10}}\r\n                                                    />\r\n                                                    <div style={{ display: \"flex\", flexDirection: \"column\"}}>\r\n                                                        <span style={{ textTransform: \"uppercase\", fontSize: 22, color: \"white\"}}>\r\n                                                            {row.symbol}\r\n                                                        </span>\r\n                                                        <span style={{ color: \"darkgrey\"}}>\r\n                                                            {row.name}\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\" style={{ color: \"white\"}}>\r\n                                                    {symbol}{\" \"}\r\n                                                    {numberWithCommas(row.current_price.toFixed(2))}\r\n                                                </TableCell>\r\n                                                <TableCell \r\n                                                align=\"right\" \r\n                                                style={{\r\n                                                    color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\r\n                                                    fontWeight: 500,\r\n                                                }}>\r\n                                                    {profit && \"+\"}\r\n                                                    {row.price_change_percentage_24h.toFixed(2)}%\r\n                                                </TableCell>\r\n                                                <TableCell align=\"right\" style={{ color: \"white\"}}>\r\n                                                    {symbol}{\" \"}\r\n                                                    {numberWithCommas(row.market_cap.toString().slice(0, -6))}M\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        )\r\n                                    })}\r\n                                </TableBody>\r\n                            </Table>\r\n                        )\r\n                    }\r\n                </TableContainer>\r\n\r\n                <Pagination \r\n                    count={(handleSearch()?.length/10).toFixed(0)}\r\n                    style={{\r\n                        padding: 20,\r\n                        width: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                    color=\"primary\"\r\n                    classes={{ ul: classes.pagination }}\r\n                    onChange={(_, value) => {\r\n                        setPage(value);\r\n                        window.scroll(0, 450);\r\n                    }}\r\n                />\r\n            </Container>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default CoinsTable","import React from 'react'\r\nimport Banner from '../components/Banner/Banner'\r\nimport CoinsTable from '../components/CoinsTable'\r\n\r\nconst Homepage = () => {\r\n    return (\r\n        <div>\r\n            <Banner />\r\n            <CoinsTable />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Homepage\r\n","export const chartDays = [\r\n    {\r\n      label: \"24 Hours\",\r\n      value: 1,\r\n    },\r\n    {\r\n      label: \"30 Days\",\r\n      value: 30,\r\n    },\r\n    {\r\n      label: \"3 Months\",\r\n      value: 90,\r\n    },\r\n    {\r\n      label: \"1 Year\",\r\n      value: 365,\r\n    },\r\n  ];","import { makeStyles } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nconst SelectButton = ({ children, selected, onClick }) => {\r\n    const useStyles = makeStyles({\r\n        selectbutton: {\r\n            border: \"1px solid gold\",\r\n            borderRadius: 5,\r\n            padding: 10,\r\n            paddingLeft: 20,\r\n            paddingRight: 20,\r\n            fontFamily: \"Montserrat\",\r\n            cursor: \"pointer\",\r\n            backgroundColor: selected ? \"gold\" : \"\",\r\n            color: selected ? \"black\" : \"\",\r\n            fontWeight: selected ? 700 : 500,\r\n            \"&:hover\": {\r\n                backgroundColor: \"gold\",\r\n                color: \"black\",\r\n            },\r\n            width: \"22%\",\r\n            margin: 5,\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <span\r\n            onClick={onClick}\r\n            onSelect={selected}\r\n            className={classes.selectbutton}\r\n        >\r\n            {children}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default SelectButton\r\n","import { CircularProgress, createTheme, makeStyles, ThemeProvider } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\nimport { HistoricalChart } from '../config/api';\r\nimport { chartDays } from '../config/data';\r\nimport { CryptoState } from '../CryptoContext';\r\nimport SelectButton from './SelectButton';\r\n\r\nconst CoinInfo = ({ coin }) => {\r\n    const [historicData, setHistoricData] = useState();\r\n    const [days, setDays] = useState(1);\r\n\r\n    const { currency } = CryptoState();\r\n\r\n    const fetchHistoricData = async () => {\r\n        const { data } = await axios.get(HistoricalChart(coin.id, days, currency));\r\n\r\n        setHistoricData(data.prices);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchHistoricData();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [currency, days]);\r\n    \r\n\r\n    const darkTheme = createTheme({\r\n        palette: {\r\n            primary: {\r\n                main: \"#fff\",\r\n            },\r\n            type: \"dark\",\r\n        }\r\n    })\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        container: {\r\n            width: \"75%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            justifyContent: \"center\",\r\n            marginTop: 25,\r\n            padding: 40,\r\n            [theme.breakpoints.down(\"md\")]: {\r\n                width: \"100%\",\r\n                marginTop: 0,\r\n                padding: 20,\r\n                paddingTop: 0,\r\n            }\r\n        }\r\n    }));\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <ThemeProvider theme={darkTheme}>\r\n            <div className={classes.container}>\r\n            \r\n            {\r\n                !historicData ? (\r\n                    <CircularProgress\r\n                        style={{ color: \"gold\"}}\r\n                        size={250}\r\n                        thickness={1} \r\n                    />\r\n                ) : (\r\n                    <Line \r\n                        data={{\r\n                            labels: historicData.map((coin) => {\r\n                                let date = new Date(coin[0]);\r\n                                let time =\r\n                                    date.getHours() > 12\r\n                                        ? `${date.getHours() - 12}:${date.getMinutes()} PM`\r\n                                        : `${date.getHours()}:${date.getMinutes()} AM`;\r\n\r\n                                return days === 1 ? time : date.toLocaleDateString()\r\n                            }),\r\n\r\n                            datasets: [\r\n                                {\r\n                                    data: historicData.map((coin) => coin[1]),\r\n                                    label: `Price ( Past ${days} Days ) in ${currency}`,\r\n                                    borderColor: \"#EEBC1D\",\r\n                                }\r\n                            ]\r\n                        }}\r\n                        options={{\r\n                            elements: {point: {\r\n                                radius: 1\r\n                            }}\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n            \r\n                <div\r\n                    style={{\r\n                            display: \"flex\",\r\n                            marginTop: 20,\r\n                            justifyContent: \"space-around\",\r\n                            width: \"100%\",\r\n                    }}>\r\n                    {chartDays.map((day) => (\r\n                        <SelectButton\r\n                            key={day.value}\r\n                            onClick={() => setDays(day.value)}\r\n                            selected={day.value === days}\r\n                        >{day.label}</SelectButton>\r\n                    ))}\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nexport default CoinInfo;\r\n","import { LinearProgress, makeStyles, Typography } from '@material-ui/core';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport { SingleCoin } from '../config/api';\r\nimport { CryptoState } from '../CryptoContext';\r\nimport CoinInfo from '../components/CoinInfo';\r\nimport ReactHtmlParser from 'react-html-parser';\r\nimport { numberWithCommas } from '../components/Banner/Carousel';\r\n\r\nconst Coinpage = () => {\r\n    const { id } = useParams();\r\n    const [coin, setCoin] = useState();\r\n    \r\n    const { currency, symbol } = CryptoState();\r\n\r\n    const fetchCoin = async () => {\r\n    const { data } = await axios.get(SingleCoin(id));\r\n\r\n        setCoin(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchCoin();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        container: {\r\n            display: \"flex\",\r\n            [theme.breakpoints.down(\"md\")]: {\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n            },\r\n        },\r\n        sidebar: {\r\n            width: \"30%\",\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\",\r\n            marginTop: 25,\r\n            borderRight: \"2px solid grey\",\r\n            [theme.breakpoints.down(\"md\")]: {\r\n                width: \"100%\"\r\n            },\r\n        },\r\n        heading: {\r\n            fontWeight: \"bold\",\r\n            marginBottom: 20,\r\n            fontFamily: \"Montserrat\",\r\n        },\r\n        description: {\r\n            width: \"100%\",\r\n            fontFamily: \"Montserrat\",\r\n            padding: 25,\r\n            paddingBottom: 15,\r\n            paddingTop: 0,\r\n            textAlign: \"justify\",\r\n        },\r\n        marketData: {\r\n            alignSelf: \"start\",\r\n            padding: 25,\r\n            paddingTop: 10,\r\n            width: \"100%\",\r\n            // making it responsive\r\n            [theme.breakpoints.down(\"md\")]: {\r\n                display: \"flex\",\r\n                justifyContent: \"space-around\",\r\n            },\r\n            [theme.breakpoints.down(\"sm\")]: {\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n            },\r\n            [theme.breakpoints.down(\"xs\")]: {\r\n                alignItems: \"start\",\r\n            }\r\n        }\r\n    }));\r\n    const classes = useStyles();\r\n\r\n    if (!coin) return <LinearProgress style={{ backgroundColor: \"gold\"}} />;\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.sidebar}>\r\n                <img \r\n                    src={coin?.image.large}\r\n                    alt={coin?.name}\r\n                    height=\"200\"\r\n                    style={{ marginBottom: 20}}\r\n                />\r\n                <Typography variant=\"h3\" className={classes.heading}>\r\n                    {coin?.name}\r\n                </Typography>\r\n                <Typography variant=\"subtitle1\" className={classes.description}>\r\n                    {ReactHtmlParser(coin?.description.en.split(\". \")[0])}.\r\n                </Typography>\r\n                <div className={classes.marketData}>\r\n                    <span style={{ display: \"flex\" }}>\r\n                        <Typography variant=\"h5\" className={classes.heading}>\r\n                            Rank:\r\n                        </Typography>\r\n                        &nbsp; &nbsp;\r\n                        <Typography variant=\"h5\" style={{ fontFamily: \"Montserrat\" }}>\r\n                            {coin?.market_cap_rank}\r\n                        </Typography>\r\n                    </span>\r\n                    <span style={{ display: \"flex\" }}>\r\n                        <Typography variant=\"h5\" className={classes.heading}>\r\n                            Current Price:\r\n                        </Typography>\r\n                        &nbsp; &nbsp;\r\n                        <Typography variant=\"h5\" style={{ fontFamily: \"Montserrat\" }}>\r\n                            {symbol}{\" \"}\r\n                            {numberWithCommas(coin?.market_data.current_price[currency.toLowerCase()])}\r\n                        </Typography>\r\n                    </span>\r\n                    <span style={{ display: \"flex\" }}>\r\n                        <Typography variant=\"h5\" className={classes.heading}>\r\n                            Market Cap:\r\n                        </Typography>\r\n                        &nbsp; &nbsp;\r\n                        <Typography variant=\"h5\" style={{ fontFamily: \"Montserrat\" }}>\r\n                            {symbol}{\" \"}\r\n                            {numberWithCommas(coin?.market_data.market_cap[currency.toLowerCase()].toString().slice(0, -6))}M\r\n                        </Typography>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n            \r\n            <CoinInfo coin={coin} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Coinpage","import { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport './App.css';\nimport Header from \"./components/Header\";\nimport Homepage from \"./pages/Homepage\";\nimport Coinpage from \"./pages/Coinpage\";\nimport { makeStyles } from '@material-ui/core';\n\nfunction App() {\n\n  const useStyles = makeStyles(() => ({\n    App: {\n        backgroundColor: \"#14161a\",\n        color: \"white\",\n        minHeight: \"100vh\"\n    },\n  }));\n\n  const classes = useStyles();\n\n  return (\n    <BrowserRouter>\n      <div className={classes.App}>\n        <Header />\n        <Routes>\n          <Route path=\"/crypto-tracker\" element={<Homepage />} exact />\n          <Route path=\"/crypto-tracker/coins/:id\" element={<Coinpage />} />\n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport CryptoContext from './CryptoContext';\nimport 'react-alice-carousel/lib/alice-carousel.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CryptoContext>\n      <App />\n    </CryptoContext>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}